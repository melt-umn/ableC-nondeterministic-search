#include <task.xh>
#include <refcount.h>

#ifndef _SEARCH_DRIVERS_XH
#define _SEARCH_DRIVERS_XH

#define DEFAULT_TASK_BUFFER_CAPACITY 100
#define DEFAULT_TASK_BUFFER_FRAMES_CAPACITY 10

void search_sequential_dfs(task_t task, closure<() -> void> *notify_success);
void search_sequential(task_t task, closure<() -> void> *notify_success,
                       size_t depth);
void search_parallel_spawn(task_t task, closure<() -> void> *notify_success,
                           size_t global_depth, size_t thread_depth, unsigned num_threads);
void search_parallel_steal(task_t task, closure<() -> void> *notify_success,
                           size_t global_depth, size_t thread_depth, unsigned num_threads);

#endif
